{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\goo-x\\\\OneDrive\\\\Dokumenter\\\\NetBeansProjects\\\\3sem\\\\Programmeringseksamen\\\\Eksamen\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\goo-x\\\\OneDrive\\\\Dokumenter\\\\NetBeansProjects\\\\3sem\\\\Programmeringseksamen\\\\Eksamen\\\\frontend\\\\src\\\\components\\\\Admin\\\\Movies\\\\AddMovie.js\";\nimport React, { useState, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\n\nconst AddMovie = props => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        movie = _useState2[0],\n        setMovie = _useState2[1];\n\n  const years = [];\n  useEffect(() => {\n    for (let i = 1960; i < 2020; i++) {\n      years[i] = i;\n    }\n\n    console.log(years);\n  }, []);\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"movietitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"What is the title of the movie?\"), React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Bad Boys\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"directors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"What year was it/will it get published\"), React.createElement(Form.Control, {\n    as: \"select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, years.map((year, i) => React.createElement(\"option\", {\n    key: i,\n    value: year,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, year)))), React.createElement(Form.Group, {\n    controlId: \"directors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Choose the directors\"), React.createElement(Form.Control, {\n    as: \"select\",\n    multiple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"1\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"2\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"3\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"4\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"5\"))));\n};\n\nexport default AddMovie;","map":{"version":3,"sources":["C:/Users/goo-x/OneDrive/Dokumenter/NetBeansProjects/3sem/Programmeringseksamen/Eksamen/frontend/src/components/Admin/Movies/AddMovie.js"],"names":["React","useState","useEffect","Form","AddMovie","props","movie","setMovie","years","i","console","log","map","year"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA,oBACAJ,QAAQ,EADR;AAAA;AAAA,QACnBK,KADmB;AAAA,QACZC,QADY;;AAE1B,QAAMC,KAAK,GAAG,EAAd;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,SAAK,IAAIO,CAAC,GAAG,IAAb,EAAmBA,CAAC,GAAG,IAAvB,EAA6BA,CAAC,EAA9B,EAAkC;AAChCD,MAAAA,KAAK,CAACC,CAAD,CAAL,GAAWA,CAAX;AACD;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD,GALQ,EAKN,EALM,CAAT;AAOA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,WAAW,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAJF,EASE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,EAAE,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGIA,KAAK,CAACI,GAAN,CAAU,CAACC,IAAD,EAAOJ,CAAP,KACR;AAAQ,IAAA,GAAG,EAAEA,CAAb;AAAgB,IAAA,KAAK,EAAEI,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BA,IAA9B,CADF,CAHJ,CAFF,CATF,EAsBE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,EAAE,EAAC,QAAjB;AAA0B,IAAA,QAAQ,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SALF,CAFF,CAtBF,CADF;AAuCD,CAlDD;;AAoDA,eAAeT,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nconst AddMovie = (props) => {\r\n  const [movie, setMovie] = useState();\r\n  const years = [];\r\n\r\n  useEffect(() => {\r\n    for (let i = 1960; i < 2020; i++) {\r\n      years[i] = i;\r\n    }\r\n    console.log(years);\r\n  }, [])\r\n\r\n  return (\r\n    <Form>\r\n\r\n\r\n\r\n      <Form.Group controlId=\"movietitle\">\r\n        <Form.Label>What is the title of the movie?</Form.Label>\r\n        <Form.Control type=\"email\" placeholder=\"Bad Boys\" />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"directors\">\r\n        <Form.Label>What year was it/will it get published</Form.Label>\r\n        <Form.Control as=\"select\">\r\n\r\n          {\r\n            years.map((year, i) => (\r\n              <option key={i} value={year}>{year}</option>\r\n            ))\r\n          }\r\n\r\n        </Form.Control>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"directors\">\r\n        <Form.Label>Choose the directors</Form.Label>\r\n        <Form.Control as=\"select\" multiple>\r\n          <option>1</option>\r\n          <option>2</option>\r\n          <option>3</option>\r\n          <option>4</option>\r\n          <option>5</option>\r\n        </Form.Control>\r\n      </Form.Group>\r\n\r\n\r\n\r\n    </Form>\r\n\r\n  );\r\n}\r\n\r\nexport default AddMovie;"]},"metadata":{},"sourceType":"module"}