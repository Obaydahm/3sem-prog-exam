{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\goo-x\\\\OneDrive\\\\Dokumenter\\\\NetBeansProjects\\\\3sem\\\\Programmeringseksamen\\\\Eksamen\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\goo-x\\\\OneDrive\\\\Dokumenter\\\\NetBeansProjects\\\\3sem\\\\Programmeringseksamen\\\\Eksamen\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\goo-x\\\\OneDrive\\\\Dokumenter\\\\NetBeansProjects\\\\3sem\\\\Programmeringseksamen\\\\Eksamen\\\\frontend\\\\src\\\\components\\\\Admin\\\\Actors\\\\AddActor.js\";\nimport React, { useState, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\n\nconst AddActor = props => {\n  const _useState = useState({\n    \"name\": \"\",\n    \"about\": \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        actor = _useState2[0],\n        setActor = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        error = _useState4[0],\n        setError = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        success = _useState6[0],\n        setSuccess = _useState6[1];\n\n  const onChange = evt => {\n    const target = evt.target;\n    actor[target.id] = target.value;\n    setActor(_objectSpread({}, actor));\n  };\n\n  const onClick = evt => {\n    evt.preventDefault();\n\n    if (actor.name === \"\" || actor.about === \"\") {\n      setError(\"You may not leave any fields empty!\");\n    } else {\n      setError(\"\");\n      props.facade.addActor(actor).then(res => {\n        if (res.hasOwnProperty(\"id\")) setSuccess(true);\n      }).catch(err => console.log(err));\n    }\n  };\n\n  return React.createElement(Form, {\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, error !== \"\" ? React.createElement(Alert, {\n    variant: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, error) : null, React.createElement(Form.Group, {\n    controlId: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"What is the fullname of the actor?\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Eg. Will Smith\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"about\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"About the actor\"), React.createElement(Form.Control, {\n    as: \"textarea\",\n    rows: \"3\",\n    placeholder: \"Eg. bla bla bla bla\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(Button, {\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Add actor\"), success ? React.createElement(Alert, {\n    variant: \"success\",\n    style: {\n      marginTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"The movies has been added!\") : null);\n};\n\nexport default AddActor;","map":{"version":3,"sources":["C:/Users/goo-x/OneDrive/Dokumenter/NetBeansProjects/3sem/Programmeringseksamen/Eksamen/frontend/src/components/Admin/Actors/AddActor.js"],"names":["React","useState","useEffect","Form","Button","Alert","AddActor","props","actor","setActor","error","setError","success","setSuccess","onChange","evt","target","id","value","onClick","preventDefault","name","about","facade","addActor","then","res","hasOwnProperty","catch","err","console","log","marginTop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA,oBACAN,QAAQ,CAAC;AACjC,YAAQ,EADyB;AAEjC,aAAS;AAFwB,GAAD,CADR;AAAA;AAAA,QACnBO,KADmB;AAAA,QACZC,QADY;;AAAA,qBAKAR,QAAQ,CAAC,EAAD,CALR;AAAA;AAAA,QAKnBS,KALmB;AAAA,QAKZC,QALY;;AAAA,qBAMIV,QAAQ,CAAC,KAAD,CANZ;AAAA;AAAA,QAMnBW,OANmB;AAAA,QAMVC,UANU;;AAQ1B,QAAMC,QAAQ,GAAGC,GAAG,IAAI;AACtB,UAAMC,MAAM,GAAGD,GAAG,CAACC,MAAnB;AACAR,IAAAA,KAAK,CAACQ,MAAM,CAACC,EAAR,CAAL,GAAmBD,MAAM,CAACE,KAA1B;AACAT,IAAAA,QAAQ,mBAAMD,KAAN,EAAR;AAED,GALD;;AAOA,QAAMW,OAAO,GAAGJ,GAAG,IAAI;AACrBA,IAAAA,GAAG,CAACK,cAAJ;;AACA,QAAIZ,KAAK,CAACa,IAAN,KAAe,EAAf,IAAqBb,KAAK,CAACc,KAAN,KAAgB,EAAzC,EAA6C;AAC3CX,MAAAA,QAAQ,CAAC,qCAAD,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAJ,MAAAA,KAAK,CAACgB,MAAN,CAAaC,QAAb,CAAsBhB,KAAtB,EACGiB,IADH,CACQC,GAAG,IAAI;AACX,YAAIA,GAAG,CAACC,cAAJ,CAAmB,IAAnB,CAAJ,EAA8Bd,UAAU,CAAC,IAAD,CAAV;AAC/B,OAHH,EAIGe,KAJH,CAISC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJhB;AAKD;AACF,GAZD;;AAgBA,SACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEf,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKIJ,KAAK,KAAK,EAAV,GACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBA,KAAzB,CADF,GAEI,IAPR,EAUE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,WAAW,EAAC,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAVF,EAeE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,EAAE,EAAC,UAAjB;AAA4B,IAAA,IAAI,EAAC,GAAjC;AAAqC,IAAA,WAAW,EAAC,qBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAfF,EAoBE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAES,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBApBF,EAsBIP,OAAO,GACL,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,SAAf;AAAyB,IAAA,KAAK,EAAE;AAAEoB,MAAAA,SAAS,EAAE;AAAb,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADK,GAEH,IAxBR,CADF;AAiCD,CAhED;;AAkEA,eAAe1B,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\n\r\nconst AddActor = (props) => {\r\n  const [actor, setActor] = useState({\r\n    \"name\": \"\",\r\n    \"about\": \"\"\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const onChange = evt => {\r\n    const target = evt.target;\r\n    actor[target.id] = target.value;\r\n    setActor({ ...actor });\r\n\r\n  }\r\n\r\n  const onClick = evt => {\r\n    evt.preventDefault();\r\n    if (actor.name === \"\" || actor.about === \"\") {\r\n      setError(\"You may not leave any fields empty!\");\r\n    } else {\r\n      setError(\"\");\r\n      props.facade.addActor(actor)\r\n        .then(res => {\r\n          if (res.hasOwnProperty(\"id\")) setSuccess(true);\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Form onChange={onChange}>\r\n\r\n\r\n\r\n      {\r\n        error !== \"\" ? (\r\n          <Alert variant=\"danger\">{error}</Alert>\r\n        ) : null\r\n      }\r\n\r\n      <Form.Group controlId=\"name\">\r\n        <Form.Label>What is the fullname of the actor?</Form.Label>\r\n        <Form.Control type=\"text\" placeholder=\"Eg. Will Smith\" />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"about\">\r\n        <Form.Label>About the actor</Form.Label>\r\n        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"Eg. bla bla bla bla\" />\r\n      </Form.Group>\r\n\r\n      <Button onClick={onClick}>Add actor</Button>\r\n      {\r\n        success ? (\r\n          <Alert variant=\"success\" style={{ marginTop: 10 }}>The movies has been added!</Alert>\r\n        ) : null\r\n      }\r\n\r\n\r\n\r\n    </Form>\r\n\r\n  );\r\n}\r\n\r\nexport default AddActor;"]},"metadata":{},"sourceType":"module"}